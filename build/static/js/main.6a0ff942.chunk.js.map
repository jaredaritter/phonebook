{"version":3,"sources":["components/People.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/people.js","App.js","index.js"],"names":["Person","props","person","name","number","onClick","deletePerson","People","people","map","id","Filter","type","value","filter","onChange","handleChange","Name","nameValue","handleNameChange","Number","numberValue","handleNumberChange","PersonForm","action","onSubmit","addPerson","Notification","message","error","className","content","baseUrl","peopleService","getAll","axios","get","then","response","data","create","newObject","post","update","updatedPerson","put","remove","delete","App","useState","setPeople","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","useEffect","initialPeople","updateNumber","personObject","window","confirm","find","returnedPerson","p","setTimeout","catch","console","log","isInPhonebook","length","filteredPeople","toLowerCase","includes","event","target","preventDefault","alert","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a0ff942.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = (props) => {\n  return (\n    <li>\n      {props.person.name}: {props.person.number}{' '}\n      <button onClick={props.deletePerson}>-</button>\n    </li>\n  );\n};\n\nconst People = (props) => {\n  return props.people.map((person) => (\n    <Person\n      key={person.id}\n      person={person}\n      deletePerson={() => props.deletePerson(person.id)}\n    />\n  ));\n};\n\nexport default People;\n","import React from 'react';\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with{' '}\n      <input type=\"text\" value={props.filter} onChange={props.handleChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Name = (props) => {\n  return (\n    <div>\n      name:{' '}\n      <input\n        type=\"text\"\n        value={props.nameValue}\n        onChange={props.handleNameChange}\n      />\n    </div>\n  );\n};\n\nconst Number = (props) => {\n  return (\n    <div>\n      number:{' '}\n      <input\n        type=\"tel\"\n        value={props.numberValue}\n        onChange={props.handleNumberChange}\n      />\n    </div>\n  );\n};\n\nconst PersonForm = (props) => {\n  return (\n    <form action=\"\" onSubmit={props.addPerson}>\n      <Name\n        nameValue={props.nameValue}\n        handleNameChange={props.handleNameChange}\n      />\n      <Number\n        numberValue={props.numberValue}\n        handleNumberChange={props.handleNumberChange}\n      />\n      <div>\n        <button>add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  if (message.error) {\n    return <div className=\"error\">{message.content}</div>;\n  }\n  return <div className=\"success\">{message.content}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\n// PHONEBOOK-BACKEND\n// const baseUrl = 'http://localhost:3001/api/persons';\n\n// JSON SERVER\n// const baseUrl = 'http://localhost:3001/people';\n\n// RELATIVE BASEURL FOR BUILD BEING SERVED BY BACKEND\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject).then((response) => response.data);\n};\n\nconst update = (id, updatedPerson) => {\n  return axios\n    .put(`${baseUrl}/${id}`, updatedPerson)\n    .then((response) => response.data);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst peopleService = {\n  getAll,\n  create,\n  update,\n  remove,\n};\n\nexport default peopleService;\n","import React, { useEffect, useState } from 'react';\nimport People from './components/People';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\nimport peopleService from './services/people';\n\nconst App = () => {\n  // -------------------------------\n  // COMPONENT STATES\n  // -------------------------------\n  const [people, setPeople] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [message, setMessage] = useState(null);\n  // const [filteredPeople, setFilteredPeople] = useState([]);\n\n  // -------------------------------\n  // COMPONENT EFFECTS\n  // -------------------------------\n  // USING EFFECT HOOK TO GRAB INITIAL DATA FROM JSON-SERVER AT LOCALHOST:3001\n  useEffect(() => {\n    peopleService.getAll().then((initialPeople) => {\n      // console.log(response);\n      setPeople(initialPeople);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   const filtered = people.filter((person) => {\n  //     console.log(person.name);\n  //     return person.name.toLowerCase().includes(filter.toLowerCase());\n  //   });\n  //   setFilteredPeople(filtered);\n  // }, [people, filter]);\n\n  // -------------------------------\n  // CREATE\n  // -------------------------------\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (newName === '') {\n      return alert('A name is required');\n    }\n    if (newNumber === '') {\n      return alert('A number is required');\n    }\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    if (isInPhonebook(newName)) {\n      updateNumber(personObject);\n    } else {\n      peopleService.create(personObject).then((returnedPerson) => {\n        setPeople(people.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        setMessage({\n          content: `${returnedPerson.name} added to the phonebook`,\n          error: false,\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  // -------------------------------\n  // UPDATE\n  // -------------------------------\n  const updateNumber = (personObject) => {\n    // IF USER WANTS TO UPDATE NUMBER OF PERSON THEN UPDATE, ELSE CANCEL\n    if (\n      window.confirm(\n        `${personObject.name} is already in the phonebook. Replace old number with new one?`\n      )\n    ) {\n      // PULL PERSON BASED ON CRITERIA\n      const person = people.find((person) => person.name === personObject.name);\n      // BUILD UPDATED VERSION OF PERSON\n      const updatedPerson = { ...person, number: personObject.number };\n\n      // SEND TO PEOPLESERVICE FOR DB UPDATE AND USE RETURNED DATA TO UPDATE APP\n      peopleService\n        .update(person.id, updatedPerson)\n        .then((returnedPerson) => {\n          setPeople(\n            people.map((p) => (p.id !== person.id ? p : returnedPerson))\n          );\n          setNewName('');\n          setNewNumber('');\n          setMessage({\n            content: `${returnedPerson.name}'s number updated`,\n            error: false,\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          // SET ERROR MESSAGE\n          setMessage({\n            content: `${person.name} was already deleted from the server`,\n            error: true,\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          // SET NOTES WITHOUT MISSING PERSON\n          setPeople(people.filter((p) => p.id !== person.id));\n        });\n    } else {\n      console.log('not updating anything');\n    }\n  };\n\n  // -------------------------------\n  // DELETE\n  // -------------------------------\n  const deletePerson = (id) => {\n    const person = people.find((person) => person.id === id);\n    if (window.confirm(`Delete ${person.name}?`)) {\n      peopleService\n        .remove(id)\n        .then((response) => {\n          setPeople(people.filter((person) => person.id !== id));\n          setMessage({\n            content: `${person.name} removed from phonebook`,\n            error: false,\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.log(error);\n          setMessage({\n            content: `Person ${id} was already removed`,\n            error: true,\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPeople(people.filter((person) => person.id !== id));\n        });\n    }\n  };\n\n  // -------------------------------\n  // INPUT HANDLERS\n  // -------------------------------\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  // -------------------------------\n  // ACCESSORY FUNCTIONS\n  // -------------------------------\n  const isInPhonebook = (name) => {\n    const list = people.filter((person) => person.name === name);\n    return list.length > 0;\n  };\n\n  // CAUSING ERROR MESSAGE ON ADDING PERSON DUE TO PERSON.NAME BEING UNDEFINED. RENDERS APPROPRIATELY ON REFRESH AND PERSON IS ADDED TO ARRAY PROPERLY. PROBLEM SEEMS TO BE BECAUSE IT IS SYNCHRONOUS.\n  const filteredPeople = people.filter((person) => {\n    return person.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  // const filteredPeople = people.filter((person) => {\n  //   return person.name\n  //     ? person.name.toLowerCase().includes(filter.toLowerCase())\n  //     : '';\n  // });\n\n  // const filteredPeople = people;\n\n  // -------------------------------\n  // APP\n  // -------------------------------\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Filter filter={filter} handleChange={handleFilterChange} />\n      <h2>Add a New Person</h2>\n      <PersonForm\n        addPerson={addPerson}\n        nameValue={newName}\n        handleNameChange={handleNameChange}\n        numberValue={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <People people={filteredPeople} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}